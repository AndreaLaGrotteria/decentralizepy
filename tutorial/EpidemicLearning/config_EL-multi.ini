[DATASET]
dataset_package = decentralizepy.datasets.CIFAR10
dataset_class = CIFAR10
model_class = LeNet
train_dir = ../../eval/data/
test_dir = ../../eval/data/
sizes = 
random_seed = 90
partition_niid = false
shards = 4
alpha = 

[OPTIMIZER_PARAMS]
optimizer_package = torch.optim
optimizer_class = SGD
lr = 0.015

[TRAIN_PARAMS]
training_package = decentralizepy.training.Training
training_class = Training
rounds = 10
full_epochs = False
batch_size = 5
shuffle = True
loss_package = torch.nn
loss_class = CrossEntropyLoss

[COMMUNICATION]
comm_package = decentralizepy.communication.TCP
comm_class = TCP
addresses_filepath = ip.json

[SHARING]
sharing_package = decentralizepy.sharing.PlainAverageSharing
sharing_class = PlainAverageSharing
compress = False

[NODE]
graph_degree = 5

[ATTACK]
attack_package = decentralizepy.attacks.Echo
attack_class = EchoDynamic
num_attackers = 1
num_active_attackers = 0
victims = [0]
num_victims = all
